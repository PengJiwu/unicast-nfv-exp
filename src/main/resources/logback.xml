<configuration>

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <!-- encoders are assigned the type
         ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
    <target>System.out</target>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>DEBUG</level>
    </filter>
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread]\t\t%-5level - %msg%n</pattern>
    </encoder>
  </appender>

  <appender name="STDERR" class="ch.qos.logback.core.ConsoleAppender">
    <!-- encoders are assigned the type
         ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
    <target>System.err</target>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>WARN</level>
    </filter>
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread]\t\t%-5level - %msg%n</pattern>
    </encoder>
  </appender>

  <appender name="SIFT" class="ch.qos.logback.classic.sift.SiftingAppender">
    <!-- in the absence of the class attribute, it is assumed that the
         desired discriminator type is
         ch.qos.logback.classic.sift.MDCBasedDiscriminator -->
    <discriminator>
      <key>exp</key>
      <defaultValue>default</defaultValue>
    </discriminator>
    <sift>
      <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <file>log/${exp}-info.log</file>
        <append>false</append>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
          <level>INFO</level>
        </filter>
        <layout class="ch.qos.logback.classic.PatternLayout">
          <pattern>%msg%n</pattern>
        </layout>
      </appender>
    </sift>
  </appender>

  <appender name="SIFT-DEBUG" class="ch.qos.logback.classic.sift.SiftingAppender">
    <!-- in the absence of the class attribute, it is assumed that the
         desired discriminator type is
         ch.qos.logback.classic.sift.MDCBasedDiscriminator -->
    <discriminator>
      <key>exp</key>
      <defaultValue>default</defaultValue>
    </discriminator>
    <sift>
      <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <file>log/${exp}-debug.log</file>
        <append>false</append>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
          <level>DEBUG</level>
        </filter>
        <layout class="ch.qos.logback.classic.PatternLayout">
          <!--<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>-->
          <pattern>%d{HH:mm:ss.SSS} %msg%n</pattern>
        </layout>
      </appender>
    </sift>
  </appender>

  <appender name="SIFT-TRACE" class="ch.qos.logback.classic.sift.SiftingAppender">
    <!-- in the absence of the class attribute, it is assumed that the
         desired discriminator type is
         ch.qos.logback.classic.sift.MDCBasedDiscriminator -->
    <discriminator>
      <key>exp</key>
      <defaultValue>default</defaultValue>
    </discriminator>
    <sift>
      <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <file>/tmp/u4700480/nfv-unicast/log/${exp}-trace.log</file>
        <append>false</append>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
          <level>TRACE</level>
          <onMatch>ACCEPT</onMatch>
          <onMismatch>DENY</onMismatch>
        </filter>
        <layout class="ch.qos.logback.classic.PatternLayout">
          <pattern>%d{HH:mm:ss.SSS} %msg%n</pattern>
        </layout>
      </appender>
    </sift>
  </appender>

  <root level="trace">
    <appender-ref ref="STDOUT"/>
    <!--<appender-ref ref="STDERR"/>-->
    <appender-ref ref="SIFT"/>
    <appender-ref ref="SIFT-DEBUG"/>
    <appender-ref ref="SIFT-TRACE"/>
  </root>
</configuration>
